spring:
  # You can use H2 console for initial test, console
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: jdbc:h2:mem:test

#  datasource:
#    url: jdbc:mysql://localhost:3306/QNA_SCHEMA
#    username: root
#    password:
  jpa:
    hibernate:
      ddl-auto: create
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    show-sql: true
#  defer-datasource-initialization: true
#  security:
#    oauth2:
#      client:
#        registration:
#          google:
#            clientId: 68422958024-qjm2umnue3e78060at96eg79h1gen90l.apps.googleusercontent.com
#            clientSecret: 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
#            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#            scope:
#              - email
#              - profile
#
#          github: # TODO : this needs my own token!!
#            clientId: d3e47fc2ddd966fa4352
#            clientSecret: 3bc0f6b8332f93076354c2a5bada2f5a05aea60d
#            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#            scope:
#              - user:email
#              - read:user
  sql:
    init:
      mode: always

logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG

#app:
#  auth:
#    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
#    tokenExpirationMsec: 864000000
#  cors:
#    allowedOrigins: http://localhost:3000,http://localhost:8080
#  oauth2:

#    authorizedRedirectUris:
#      - http://localhost:3000/oauth2/redirect
#      - myandroidapp://oauth2/redirect
#      - myiosapp://oauth2/redirect